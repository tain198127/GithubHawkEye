<!--
  ~ The MIT License
  ~
  ~ Copyright 2005-2007 The Codehaus.
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of
  ~ this software and associated documentation files (the "Software"), to deal in
  ~ the Software without restriction, including without limitation the rights to
  ~ use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
  ~ of the Software, and to permit persons to whom the Software is furnished to do
  ~ so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>appassembler</artifactId>
    <groupId>org.codehaus.mojo.appassembler</groupId>
    <version>1.1.1</version>
  </parent>
  <groupId>org.codehaus.mojo</groupId>
  <artifactId>appassembler-maven-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <name>Appassembler :: Maven Plug-In</name>
  <description>A Mojo for generating bin scripts for Java applications.</description>
  <prerequisites>
    <maven>2.0.6</maven>
  </prerequisites>
  <contributors>
    <contributor>
      <name>Philip Oliver-Paull</name>
    </contributor>
    <contributor>
      <name>Mathieu Champlon</name>
    </contributor>
  </contributors>
  <dependencies>
    <dependency>
      <groupId>org.codehaus.mojo.appassembler</groupId>
      <artifactId>appassembler-model</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.mojo.appassembler</groupId>
      <artifactId>appassembler-booter</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>1.5.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>2.0.6</version>
    </dependency>
    <dependency>
      <groupId>stax</groupId>
      <artifactId>stax-api</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <version>1.0-alpha-9-stable-1</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <version>2.0.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <version>2.0.6</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-maven-plugin</artifactId>
        <version>1.3.8</version>
        <executions>
          <execution>
            <goals>
              <goal>descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Here, we download the wrapper bundle and incorporate into the plugin directly -->
      <!-- TODO: improve by doing this dynamically in the plugin so that non-JSW users aren't burdened by the size of the plugin, and so the user can choose an alternate version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.0</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>tanukisoft</groupId>
                  <artifactId>wrapper-delta-pack</artifactId>
                  <version>3.2.3</version>
                  <type>tar.gz</type>
                </artifactItem>
              </artifactItems>
            </configuration>
            <goals>
              <goal>unpack</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>target/dependency/wrapper-delta-pack-3.2.3/src/conf</directory>
        <targetPath>org/codehaus/mojo/appassembler/daemon/jsw/conf</targetPath>
      </resource>
      <resource>
        <directory>src/main/patches</directory>
        <targetPath>org/codehaus/mojo/appassembler/daemon/jsw/bin</targetPath>
        <includes>
          <include>sh.script.in</include>
        </includes>
      </resource>
      <resource>
        <directory>target/dependency/wrapper-delta-pack-3.2.3/src/bin</directory>
        <targetPath>org/codehaus/mojo/appassembler/daemon/jsw/bin</targetPath>
        <includes>
          <include>AppCommand.bat.in</include>
        </includes>
      </resource>
      <!-- TODO: Have the plugin copy these in (depending on platforms) -->
      <resource>
        <directory>target/dependency/wrapper-delta-pack-3.2.3/lib</directory>
        <targetPath>org/codehaus/mojo/appassembler/daemon/jsw/lib</targetPath>
        <includes>
          <include>wrapper.jar</include>
          <include>wrapper-*.dll</include>
          <include>libwrapper-*</include>
        </includes>
      </resource>
      <!-- TODO: Have the plugin copy these in (depending on platforms) -->
      <resource>
        <directory>target/dependency/wrapper-delta-pack-3.2.3/bin</directory>
        <targetPath>org/codehaus/mojo/appassembler/daemon/jsw/bin</targetPath>
        <includes>
          <include>wrapper-*</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
  </build>
  <profiles>
    <profile>
      <id>integration-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>shitty-maven-plugin</artifactId>
            <version>1.0-alpha-3</version>
            <executions>
              <execution>
                <goals>
                  <goal>clean</goal>
                  <goal>install</goal>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <projects>
                <project>
                  <directory>src/it</directory>
                  <includes>
                    <include>${its}/pom.xml</include>
                  </includes>
                </project>
              </projects>
              <threadCount>${threadCount}</threadCount>
              <parallel>true</parallel>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <properties>
    <its>*</its>
    <threadCount>2</threadCount>
  </properties>
</project>
