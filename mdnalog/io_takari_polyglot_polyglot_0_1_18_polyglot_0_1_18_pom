<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2012 to original author or authors All rights reserved. 
  This program and the accompanying materials are made available under the 
  terms of the Eclipse Public License v1.0 which accompanies this distribution, 
  and is available at http://www.eclipse.org/legal/epl-v10.html -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.takari</groupId>
    <artifactId>takari</artifactId>
    <version>14</version>
  </parent>

  <groupId>io.takari.polyglot</groupId>
  <artifactId>polyglot</artifactId>
  <version>0.1.18</version>
  <name>Polyglot :: Aggregator</name>
  <packaging>pom</packaging>

  <licenses>
    <license>
      <name>The Eclipse Public License, Version 1.0</name>
      <url>http://www.eclipse.org/legal/epl-v10.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <mavenVersion>3.3.1</mavenVersion>
    <sisuInjectVersion>0.0.0.M5</sisuInjectVersion>
  </properties>

  <scm>
    <connection>scm:git:git@github.com:tesla/tesla-polyglot.git</connection>
    <developerConnection>scm:git:git@github.com:tesla/tesla-polyglot.git</developerConnection>
    <url>https://github.com/tesla/tesla-polyglot</url>
    <tag>polyglot-0.1.18</tag>
  </scm>

  <modules>
    <module>polyglot-common</module>
    <module>polyglot-atom</module>
    <module>polyglot-ruby</module>
    <module>polyglot-scala</module>    
    <module>polyglot-groovy</module>
    <module>polyglot-yaml</module>
    <module>polyglot-clojure</module>
    <module>polyglot-xml</module>
    <module>polyglot-maven-plugin</module>    
    <module>polyglot-translate-plugin</module>    
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.takari.polyglot</groupId>
        <artifactId>polyglot-common</artifactId>
        <version>0.1.18</version>
      </dependency>
      <dependency>
        <groupId>io.takari.polyglot</groupId>
        <artifactId>polyglot-ruby</artifactId>
        <version>0.1.18</version>
      </dependency>
      <dependency>
        <groupId>io.takari.polyglot</groupId>
        <artifactId>polyglot-groovy</artifactId>
        <version>0.1.18</version>
      </dependency>
      <dependency>
        <groupId>io.takari.polyglot</groupId>
        <artifactId>polyglot-atom</artifactId>
        <version>0.1.18</version>
      </dependency>
      <dependency>
        <groupId>io.takari.polyglot</groupId>
        <artifactId>polyglot-scala</artifactId>
        <version>0.1.18</version>
      </dependency>
      <dependency>
        <groupId>io.takari.polyglot</groupId>
        <artifactId>polyglot-yaml</artifactId>
        <version>0.1.18</version>
      </dependency>
      <dependency>
        <groupId>io.takari.polyglot</groupId>
        <artifactId>polyglot-xml</artifactId>
        <version>0.1.18</version>
      </dependency>      
      <!-- We inline Maven's dependency management section to align dependency 
        versions from Maven's core -->
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven</artifactId>
        <version>${mavenVersion}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- I'd like to remove these two and place them in Maven's depMan 
        section. We want to be a complete superset as much as possible -->
      <dependency>
        <groupId>org.eclipse.sisu</groupId>
        <artifactId>org.eclipse.sisu.inject.tests</artifactId>
        <version>0.0.0.M3</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!--  Dependencies all implementors need -->
  <dependencies>
    <!-- This needs to not be provided or it causes the extension mechanism to fail -->
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <scope>provided</scope>
    </dependency>  
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <scope>provided</scope>      
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>provided</scope>
    </dependency>  
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject.tests</artifactId>
      <scope>test</scope>
    </dependency>        
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-component-metadata</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate-metadata</goal>
              <goal>generate-test-metadata</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <configuration>
            <preparationGoals>clean install</preparationGoals>
            <mavenExecutorId>forked-path</mavenExecutorId>
          </configuration>
        </plugin>
        <!--This plugin's configuration is used to store Eclipse m2e settings 
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>io.tesla.maven.plugins</groupId>
                    <artifactId>tesla-license-plugin</artifactId>
                    <versionRange>[0.0.1-SNAPSHOT,)</versionRange>
                    <goals>
                      <goal>check</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
